version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "5001:5001"
    volumes:
      - ./backend:/app
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/${POSTGRES_DB}
      - PORT=5001
      - FLASK_ENV=development
      - CHOKIDAR_USEPOLLING=true

  grader:
    build: ./grader
    ports:
      - "4999:4999"
    volumes:
      - ./grader:/app
      - /var/run/docker.sock:/var/run/docker.sock 
    depends_on:
      - db 
    environment:
      - PORT=4999


  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
      - db
    environment:
      - CHOKIDAR_USEPOLLING=true

  db:
    image: postgres:16
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER} 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} 
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: UTC
      PGTZ: UTC 
    volumes:
      - judgepgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL} 
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD} 
    ports:
      - "5050:80"
    depends_on:
      - db
  
  worker:
    build: ./grader/worker
    entrypoint: [ "echo", "Worker container should not run by default." ]
    profiles: [ "dont-start" ]
    depends_on:
      - db


volumes:
  judgepgdata:

  # db:
  #   image: postgres:14
  #   restart: always
  #   environment:
  #     POSTGRES_USER: user
  #     POSTGRES_PASSWORD: pass
  #     POSTGRES_DB: mydb
  #   ports:
  #     - "5432:5432"
